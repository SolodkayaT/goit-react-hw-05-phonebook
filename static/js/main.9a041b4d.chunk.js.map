{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/App/TitleFade.module.css","components/App/ShowContacts.module.css","components/App/FilterShow.module.css","components/App/NotificationShow.module.css","components/ContactListItem/ContactListItem.js","components/ContactListButton/ContactListButton.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","ContactListItem","contact","keys","children","className","styles","contactItem","key","name","phone","defaultProps","ContactListButton","onRemoveContact","contactButton","type","onClick","id","ContactList","contacts","onRemove","TransitionGroup","component","contactList","map","CSSTransition","timeout","classNames","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","Filter","onChangeFilter","filterContainer","filterName","filter","Notification","NotificationMessage","App","showTitle","NotificationName","changeFilter","addContact","some","prevState","getFiltredContacts","toLowerCase","includes","removeContact","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","section","notification","in","appear","TitleFadeStyles","unmountOnExit","title","length","NotificationShowStyles","FilterShowStyles","ShowContactsStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a041b4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\",\"notification\":\"App_notification__T6zxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"filterName\":\"Filter_filterName__2ZMlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\",\"phone\":\"ContactListItem_phone__XRgco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationMessage\":\"Notification_NotificationMessage__1y2k7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"TitleFade_appear__1M_fD\",\"appear-active\":\"TitleFade_appear-active__1AAKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"ShowContacts_appear__1u0IG\",\"appear-active\":\"ShowContacts_appear-active__3niIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterShow_enter__29vrb\",\"enter-active\":\"FilterShow_enter-active__1Tu1F\",\"exit\":\"FilterShow_exit__35d54\",\"exit-active\":\"FilterShow_exit-active__3eGRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"NotificationShow_enter__8kJUV\",\"enter-active\":\"NotificationShow_enter-active__1-mNV\",\"exit\":\"NotificationShow_exit__p8Vat\",\"exit-active\":\"NotificationShow_exit-active__3LkYm\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({ contact, keys, children }) {\n  return (\n    <li className={styles.contactItem} key={keys}>\n      {contact.name}\n      <div>\n        <span className={styles.phone}> {contact.phone}</span>\n        {children}\n      </div>\n    </li>\n  );\n}\n\nContactListItem.defaultProps = {\n  contact: {},\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.object,\n  keys: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ contact, onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={() => onRemoveContact(contact.id)}\n    ></button>\n  );\n}\n\nContactListButton.defaultProps = {\n  contact: {},\n  onRemoveContact: () => {}\n};\n\nContactListButton.propTypes = {\n  contact: PropTypes.object,\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\nimport styles from \"./ContactList.module.css\";\nimport \"./ContactList-item-animation.css\";\n\nexport default function ContactList({ contacts, onRemove }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.name}\n          timeout={250}\n          classNames=\"ContactsList-item-fade\"\n        >\n          <ContactListItem contact={contact}>\n            <ContactListButton\n              contact={contact}\n              onRemoveContact={() => onRemove(contact.id)}\n            />\n          </ContactListItem>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: [],\n  onRemove: () => {}\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemove: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.filterName}>\n        Find contacts by name\n        <input\n          className={styles.filter}\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        ></input>{\" \"}\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\",\n  onChangeFilter: () => {}\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nexport default function Notification({ name }) {\n  return (\n    <p className={styles.NotificationMessage}>\n      {name} is allready in contacts!\n    </p>\n  );\n}\n\nNotification.defaultProps = {\n  name: \"\"\n};\n\nNotification.propTypes = {\n  name: PropTypes.string\n};\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport Notification from \"../Notification/Notification\";\nimport styles from \"./App.module.css\";\nimport TitleFadeStyles from \"./TitleFade.module.css\";\nimport ShowContactsStyles from \"./ShowContacts.module.css\";\nimport FilterShowStyles from \"./FilterShow.module.css\";\nimport NotificationShowStyles from \"./NotificationShow.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    showTitle: false,\n    NotificationName: \"\"\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n        showTitle: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      this.setState({ NotificationName: name });\n      return;\n    }\n    const contact = { id: name, name, phone };\n    this.setState(prevState => {\n      return {\n        NotificationName: \"\",\n        contacts: [...prevState.contacts, contact]\n      };\n    });\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        NotificationName: \"\",\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter, NotificationName } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <section className={styles.section}>\n        <div className={styles.notification}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames={TitleFadeStyles}\n            timeout={500}\n            unmountOnExit\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <CSSTransition\n            in={NotificationName.length > 0}\n            timeout={250}\n            classNames={NotificationShowStyles}\n            unmountOnExit\n          >\n            <Notification name={NotificationName}></Notification>\n          </CSSTransition>\n        </div>\n        {ContactForm && <ContactForm onAddContact={this.addContact} />}\n        <h2 className={styles.title}>Contacts</h2>\n        <CSSTransition\n          in={contacts.length > 1}\n          classNames={FilterShowStyles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames={ShowContactsStyles}\n          timeout={500}\n          unmountOnExit\n        >\n          <ContactList\n            contacts={visibleContacts}\n            onRemove={this.removeContact}\n          />\n        </CSSTransition>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./css/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}